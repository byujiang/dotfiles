## Personal bash command Directory
#########################################
export DYLD_LIBRARY_PATH=/usr/local/qt/5.5/clang_64/lib
# Command Aliases
export EDITOR=vim
alias sb='sudo reboot'
alias c='clear'
alias e='exit'

if [[ `uname` == "Darwin" ]]; then
	alias ls='ls -G'
else
	alias ls='ls --color=auto -G'
fi
#tinyscheme
alias ..='cd ..'
alias ...='cd ../..'
alias ts='scheme'
alias sl='ls'
alias l='ls'
alias ll='ls -lh'
alias la='ls -A'
alias gp='gnuplot'
alias g++='g++ -std=c++11 -O2 -Wall'
alias clang++='clang++ -O2 -Wall'
alias md='mkdir -p'
alias rd='rmdir'
alias rm='rm -i'
alias mr='rm -i'
alias lla='ls -lhA'
alias iconvf='iconv -f gb18030 -t utf8'
alias lunart='lunar -h -b --utf8'
alias lunarf='lunar -h -b -i --utf8'
alias axels='axel -n 30 -o '
alias vi='vim'
alias vimrc='vi ~/.vimrc'
alias vibash='vi ~/.bash_aliases'
# alias make='make -j4'
alias octave='octave --silent'
alias qs='ps -ef|grep -v grep|grep'
######## xelatex ############
######## git aliases ########
alias gita='git add -f --all * && git commit -a -m'
alias gitp='git push origin master'
################# Mac #################
if [[ `uname` == "Darwin" ]]; then
	alias show='defaults write com.apple.finder AppleShowAllFiles -bool true'
	alias hide='defaults write com.apple.finder AppleShowAllFiles -bool false'
	alias updatedb='sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.locate.plist'
######### Wi-Fi ############
	function v4off(){
		sudo networksetup -setv4off Wi-Fi
		sudo networksetup -setdnsservers Wi-Fi 2001:4860:4860::8888 8.8.8.8
		ssh -6 -N -D 7070  darkshell 1>/dev/null &
		sudo networksetup -setsocksfirewallproxystate Wi-Fi on
		sudo networksetup -setsocksfirewallproxy Wi-Fi localhost 1080
	}
	function v4on(){
		sudo networksetup -setdhcp Wi-Fi
		sudo networksetup -setdnsservers Wi-Fi Empty
		sudo networksetup -setsocksfirewallproxystate Wi-Fi off
	}
########### ftp ############
	alias ftpon='sudo -s launchctl load -w /System/Library/LaunchDaemons/ftp.plist'
	alias ftpoff='sudo -s launchctl unload -w /System/Library/LaunchDaemons/ftp.plist'
########## MySQL ###########
	alias mysql='/usr/local/mysql/bin/mysql'
	alias mysqladmin='/usr/local/mysql/bin/mysqladmin'
########### PATH ###########
	### QT 5.5
	export PATH=$PATH:/usr/local/qt/5.5/clang_64/bin
	export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/qt/5.5/clang_64/lib/pkgconfig:/usr/local/lib/pkgconfig/
	### qtgrace
	if [[ -d /Applications/QMBF.app/ ]]; then
		export PATH=$PATH:/Applications/QMBF.app/Contents/MacOS
	fi
	### CMake.app
	if [[ -d /Applications/CMake.app/Contents/bin ]];then
		export PATH=$PATH:/Applications/CMake.app/Contents/bin
	fi
	### ROOT
	if [[ -d /Applications/root/bin/ ]]; then
		export PATH=$PATH:/Applications/root/bin
	fi
!  ### TexLive
	if [[ -d /usr/local/texlive/2016/bin/x86_64-darwin/ ]]; then
		export PATH=$PATH:/usr/local/texlive/2016/bin/x86_64-darwin
	fi
	### Python 3.5
	if [[ -d /Library/Frameworks/Python.framework/Versions/3.5/bin ]]; then
		export PATH=$PATH:/Library/Frameworks/Python.framework/Versions/3.5/bin
	fi
############################

	function watch(){
		while :;do
			clear
			$1
			sleep $2
		done
	}
fi
############ Personal Functions ############
# This script file is for converting gb18030 files to utf-8 files in batches
function gb2utf(){
	set -o nounset
	dir=$1
	if [ $dir == "" ]; then
		echo "Usage: "
		echo "        g2u directory"
		echo "    This is a script file to convert gb18030 files to utf-8 files in batches. "
		return
	fi
	if [ -d $dir ]; then
		mkdir -p $dir/original/
		cd $dir
		for name in *.txt; do
			tmp=utf-`basename "$name"`
			iconv -f gb18030 -t utf-8 "$name" >"$tmp"
			mv "$name" original/"$name"
			mv "${tmp}" "$name"
		done
	else
		echo "Directory Doesn't Exist!!! Check the directory you input, ^<>^ !!!"
		return
	fi
	cd ..
}
function g2u(){
	if [[ $# -ne 2 ]]; then
		echo "g2u input output"
		return
	fi
	input=$1
	output=$2
	iconv -f gb18030 -t utf-8 "$input" > "$output"
}

###---------------------------------------------------###
# xqcd and x settings
if [[ -d $HOME/Workspace/xqcd/x/bin ]]; then
	export xpath="$HOME/Workspace/xqcd/x/"
	export PATH=$PATH:$HOME/Workspace/xqcd/x/bin
fi


export PATH=/usr/local/sbin:$PATH
export PATH=$PATH:/usr/local/lib/node_modules/:$HOME/bin:$HOME/usr/bin

export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8

function revtex(){
	tex_file=$1
	file=${tex_file//.tex/}
	if [[ ! -f $tex_file ]]; then
		echo "Cannot find tex file $tex_file\n"
		return
	fi
	xelatex ${file}.tex >/dev/null
	[[ $? == 0 ]] && bibtex ${file} >/dev/null
	[[ $? == 0 ]] && xelatex ${file}.tex >/dev/null
	xelatex ${file}.tex >/dev/null
	open ${file}.pdf
	\rm -f ${file}.aux ${file}.log ${file}.bbl ${file}.blg
}

#### ssserver or sslocal
function rmtex(){
	test -f *.aux && rm -f *.aux
	test -f *.lot && rm -f *.lot
	test -f *.out && rm -f *.out
	test -f *.toc && rm -f *.toc
	test -f *.synctex.gz && rm -f *.synctex.gz
	test -f *.lof && rm -f *.lof
	test -f *-inc.eps && rm -f *-inc.eps
}


alias pc='proxychains4 -q'
alias yt='proxychains4 -q youtube-dl --recode-video mp4'
alias wget='wget --no-check-certificate'

#export http_proxy=127.0.0.1:1080
#export https_proxy=127.0.0.1:1080
#export socks_proxy=127.0.0.1:1080

export PATH=$PATH:$HOME/Workspace/rismom/analysis/python
alias open='evince'
alias ppv='proxychains4 -q mpv'
alias gcc='gcc -fdiagnostics-color=always -std=c11'
alias g++='g++ -fdiagnostics-color=always -std=c++11'
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

function open(){
	gnome-open "$1" >/dev/null 2>&1
}

#### sss ###
function sss(){
	opt=$1
	json_path=~/tmp/ss/
	if [[ $opt == "" ]]; then
		echo "Usage:\n sss 4/6"
		return 130
	fi
	set -x
	cd ${json_path}
	ln -s ss${opt}.json ss.json
	sudo systemctl restart gcm
}
